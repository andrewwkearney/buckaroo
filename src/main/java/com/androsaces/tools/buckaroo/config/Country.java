/*
 * Copyright Â© 2017 androsaces. All rights reserved.
 */

package com.androsaces.tools.buckaroo.config;

import static com.androsaces.tools.buckaroo.config.Continent.*;
import static com.androsaces.tools.buckaroo.config.Region.*;

/**
 * This enumeration defines countries. The enumeration references the ISO-3166
 * codes for each country. Some non-ISO codes have been added to
 * support the countries with the United Kingdom.
 *
 * @author Andrew Kearney
 * @since 1.1.0
 */
public enum Country {
    ABW(AMER, NorthAmerica, "Aruba"),
    AFG(APAC, Asia, "Afghanistan"),
    AGO(EMEA, Africa, "Angola"),
    AIA(AMER, NorthAmerica, "Anguilla"),
    ALB(EMEA, Europe, "Albania"),
    AND(EMEA, Europe, "Andorra"),
    ARE(EMEA, Asia, "United Arab Emirates"),
    ARG(AMER, SouthAmerica, "Argentina"),
    ARM(EMEA, Asia, "Armenia"),
    ASM(APAC, Oceania, "American Samoa"),
    ATA(GLOB, Antarctica, "Antarctica"),
    ATG(AMER, NorthAmerica, "Antigua"),
    AUS(APAC, Australia, "Australia"),
    AUT(EMEA, Europe, "Austria"),
    AZE(EMEA, Asia, "Azerbaijan"),
    BDI(EMEA, Africa, "Burundi"),
    BEL(EMEA, Europe, "Belgium"),
    BEN(EMEA, Africa, "Benin"),
    BES(AMER, NorthAmerica, "Bonaire"),
    BFA(EMEA, Africa, "Burkina Faso"),
    BGD(APAC, Asia, "Bangladesh"),
    BGR(EMEA, Europe, "Bulgaria"),
    BHR(EMEA, Asia, "Bahrain"),
    BHS(AMER, NorthAmerica, "Bahamas"),
    BIH(EMEA, Europe, "Bosnia and Herzegovina"),
    BLM(AMER, NorthAmerica, "Saint Barthlemy"),
    BLR(EMEA, Europe, "Belarus"),
    BLZ(AMER, NorthAmerica, "Belize"),
    BMU(AMER, NorthAmerica, "Bermuda"),
    BOL(AMER, SouthAmerica, "Bolivia"),
    BRA(AMER, SouthAmerica, "Brazil"),
    BRB(AMER, NorthAmerica, "Barbados"),
    BRN(APAC, Asia, "Brunei"),
    BTN(APAC, Asia, "Bhutan"),
    BVT(GLOB, Antarctica, "Bouvet Island"),
    BWA(EMEA, Africa, "Botswana"),
    CAF(EMEA, Africa, "Central African Republic"),
    CAN(AMER, NorthAmerica, "Canada"),
    CCK(APAC, Asia, "Cocos Islands"),
    CHE(EMEA, Europe, "Switzerland"),
    CHL(AMER, SouthAmerica, "Chile"),
    CHN(APAC, Asia, "China"),
    CIV(EMEA, Africa, "Ivory Coast"),
    CMR(EMEA, Africa, "Cameroon"),
    COG(EMEA, Africa, "Congo"),
    COK(APAC, Oceania, "Cook Islands"),
    COL(AMER, SouthAmerica, "Colombia"),
    COM(EMEA, Africa, "Comoros"),
    CPV(EMEA, Africa, "Cape Verde"),
    CRI(AMER, NorthAmerica, "Costa Rica"),
    CUB(AMER, NorthAmerica, "Cuba"),
    CUW(AMER, NorthAmerica, "Curacao"),
    CXR(APAC, Asia, "Christmas Island"),
    CYM(AMER, NorthAmerica, "Cayman Islands"),
    CYP(EMEA, Asia, "Cyprus"),
    CZE(EMEA, Europe, "Czech Republic"),
    DEU(EMEA, Europe, "Germany"),
    DJI(EMEA, Africa, "Djibouti"),
    DMA(AMER, NorthAmerica, "Dominica"),
    DNK(EMEA, Europe, "Denmark"),
    DOM(AMER, NorthAmerica, "Dominican Republic"),
    DZA(EMEA, Africa, "Algeria"),
    ECU(AMER, SouthAmerica, "Ecuador"),
    EGY(EMEA, Africa, "Egypt"),
    ENG(EMEA, Europe, "England"),
    ERI(EMEA, Africa, "Eritrea"),
    ESH(EMEA, Africa, "Western Sahara"),
    ESP(EMEA, Europe, "Spain"),
    EST(EMEA, Europe, "Estonia"),
    ETH(EMEA, Africa, "Ethiopia"),
    FIN(EMEA, Europe, "Finland"),
    FJI(APAC, Oceania, "Fiji"),
    FLK(AMER, SouthAmerica, "Falkland Islands"),
    FRA(EMEA, Europe, "France"),
    FRO(EMEA, Europe, "Faroe Islands"),
    FSM(APAC, Oceania, "Micronesia"),
    GAB(EMEA, Africa, "Gabon"),
    GBR(EMEA, Europe, "United Kingdom"),
    GEO(EMEA, Asia, "Georgia"),
    GGY(EMEA, Europe, "Guernsey"),
    GHA(EMEA, Africa, "Ghana"),
    GIB(EMEA, Europe, "Gibraltar"),
    GIN(EMEA, Africa, "Guinea"),
    GLP(AMER, NorthAmerica, "Guadeloupe"),
    GMB(EMEA, Africa, "Gambia"),
    GNB(EMEA, Africa, "Guinea-Bissau"),
    GNQ(EMEA, Africa, "Equatorial Guinea"),
    GRC(EMEA, Europe, "Greece"),
    GRD(AMER, NorthAmerica, "Grenada"),
    GRL(AMER, NorthAmerica, "Greenland"),
    GTM(AMER, NorthAmerica, "Guatemala"),
    GUF(AMER, SouthAmerica, "French Guiana"),
    GUM(APAC, Oceania, "Guam"),
    GUY(AMER, SouthAmerica, "Guyana"),
    HKG(APAC, Asia, "Hong Kong"),
    HND(AMER, NorthAmerica, "Honduras"),
    HRV(EMEA, Europe, "Croatia"),
    HTI(AMER, NorthAmerica, "Haiti"),
    HUN(EMEA, Europe, "Hungary"),
    IDN(APAC, Asia, "Indonesia"),
    IMN(EMEA, Europe, "Isle of Man"),
    IND(APAC, Asia, "India"),
    IRL(EMEA, Europe, "Ireland"),
    IRN(EMEA, Asia, "Iran"),
    IRQ(EMEA, Asia, "Iraq"),
    ISL(EMEA, Europe, "Iceland"),
    ISR(EMEA, Asia, "Israel"),
    ITA(EMEA, Europe, "Italy"),
    JAM(AMER, NorthAmerica, "Jamaica"),
    JEY(EMEA, Europe, "Jersey"),
    JOR(EMEA, Asia, "Jordan"),
    JPN(APAC, Asia, "Japan"),
    KAZ(APAC, Asia, "Kazakhstan"),
    KEN(EMEA, Africa, "Kenya"),
    KGZ(APAC, Asia, "Kyrgyzstan"),
    KHM(APAC, Asia, "Cambodia"),
    KIR(APAC, Oceania, "Kiribati"),
    KOR(APAC, Asia, "South Korea"),
    KWT(EMEA, Asia, "Kuwait"),
    LAO(APAC, Asia, "Laos"),
    LBN(EMEA, Asia, "Lebanon"),
    LBR(EMEA, Africa, "Liberia"),
    LBY(EMEA, Africa, "Libyan"),
    LCA(AMER, NorthAmerica, "Saint Lucia"),
    LIE(EMEA, Europe, "Liechtenstein"),
    LKA(APAC, Asia, "Sri Lanka"),
    LSO(EMEA, Africa, "Lesotho"),
    LTU(EMEA, Europe, "Lithuania"),
    LUX(EMEA, Europe, "Luxembourg"),
    LVA(EMEA, Europe, "Latvia"),
    MAC(APAC, Asia, "Macao"),
    MAF(AMER, NorthAmerica, "Saint Martin"),
    MAR(EMEA, Africa, "Morocco"),
    MCO(EMEA, Europe, "Monaco"),
    MDA(EMEA, Europe, "Moldova"),
    MDG(EMEA, Africa, "Madagascar"),
    MDV(APAC, Asia, "Maldives"),
    MEX(AMER, NorthAmerica, "Mexico"),
    MHL(APAC, Oceania, "Marshall Islands"),
    MKD(EMEA, Europe, "Macedonia"),
    MLI(EMEA, Africa, "Mali"),
    MLT(EMEA, Europe, "Malta"),
    MMR(APAC, Asia, "Myanmar"),
    MNE(EMEA, Europe, "Montenegro"),
    MNG(APAC, Asia, "Mongolia"),
    MOZ(EMEA, Africa, "Mozambique"),
    MRT(EMEA, Africa, "Mauritania"),
    MSR(AMER, NorthAmerica, "Montserrat"),
    MTQ(AMER, NorthAmerica, "Martinique"),
    MUS(EMEA, Africa, "Mauritius"),
    MWI(EMEA, Africa, "Malawi"),
    MYS(APAC, Asia, "Malaysia"),
    MYT(EMEA, Africa, "Mayotte"),
    NAM(EMEA, Africa, "Namibia"),
    NCL(APAC, Oceania, "New Caledonia"),
    NER(EMEA, Africa, "Niger"),
    NFK(APAC, Oceania, "Norfolk Island"),
    NGA(EMEA, Africa, "Nigeria"),
    NIC(AMER, NorthAmerica, "Nicaragua"),
    NIR(EMEA, Europe, "Northern Ireland"),
    NIU(APAC, Oceania, "Niue"),
    NLD(EMEA, Europe, "Netherlands"),
    NOR(EMEA, Europe, "Norway"),
    NPL(APAC, Asia, "Nepal"),
    NRU(APAC, Oceania, "Nauru"),
    NZL(APAC, Oceania, "New Zealand"),
    OMN(EMEA, Asia, "Oman"),
    PAK(APAC, Asia, "Pakistan"),
    PAN(AMER, NorthAmerica, "Panama"),
    PCN(APAC, Oceania, "Pitcairn"),
    PER(AMER, SouthAmerica, "Peru"),
    PHL(APAC, Asia, "Philippines"),
    PLW(APAC, Oceania, "Palau"),
    PNG(APAC, Oceania, "Papua New Guinea"),
    POL(EMEA, Europe, "Poland"),
    PRI(AMER, NorthAmerica, "Puerto Rico"),
    PRK(APAC, Asia, "North Korea"),
    PRT(EMEA, Europe, "Portugal"),
    PRY(AMER, SouthAmerica, "Paraguay"),
    PSE(EMEA, Asia, "Palestinian Territory"),
    PYF(APAC, Oceania, "French Polynesia"),
    QAT(EMEA, Asia, "Qatar"),
    REU(EMEA, Africa, "Reunion"),
    ROU(EMEA, Europe, "Romania"),
    RUS(EMEA, Asia, "Russia"),
    RWA(EMEA, Africa, "Rwanda"),
    SAU(EMEA, Asia, "Saudi Arabia"),
    SCO(EMEA, Europe, "Scotland"),
    SDN(EMEA, Africa, "Sudan"),
    SEN(EMEA, Africa, "Senegal"),
    SGP(APAC, Asia, "Singapore"),
    SGS(GLOB, Antarctica, "South Georgia"),
    SHN(EMEA, Africa, "Saint Helena"),
    SJM(EMEA, Europe, "Svalbard and Jan Mayen"),
    SLB(APAC, Oceania, "Solomon Islands"),
    SLE(EMEA, Africa, "Sierra Leone"),
    SLV(AMER, NorthAmerica, "El Salvador"),
    SMR(EMEA, Europe, "San Marino"),
    SOM(EMEA, Africa, "Somalia"),
    SPM(AMER, NorthAmerica, "Saint Pierre and Miquelon"),
    SRB(EMEA, Europe, "Serbia"),
    STP(EMEA, Africa, "Sao Tome and Principe"),
    SUR(AMER, SouthAmerica, "Suriname"),
    SVK(EMEA, Europe, "Slovakia"),
    SVN(EMEA, Europe, "Slovenia"),
    SWE(EMEA, Europe, "Sweden"),
    SWZ(EMEA, Africa, "Swaziland"),
    SXM(AMER, NorthAmerica, "Sint Maarten"),
    SYC(EMEA, Africa, "Seychelles"),
    SYR(EMEA, Asia, "Syria"),
    TCA(AMER, NorthAmerica, "Turks and Caicos Islands"),
    TCD(EMEA, Africa, "Chad"),
    TGO(EMEA, Africa, "Togo"),
    THA(APAC, Asia, "Thailand"),
    TJK(APAC, Asia, "Tajikistan"),
    TKL(APAC, Oceania, "Tokelau"),
    TKM(APAC, Asia, "Turkmenistan"),
    TLS(APAC, Asia, "Timor-Leste"),
    TON(APAC, Oceania, "Tonga"),
    TTO(AMER, NorthAmerica, "Trinidad and Tobago"),
    TUN(EMEA, Africa, "Tunisia"),
    TUR(EMEA, Asia, "Turkey"),
    TUV(APAC, Oceania, "Tuvalu"),
    TWN(APAC, Asia, "Taiwan"),
    TZA(EMEA, Africa, "Tanzania"),
    UGA(EMEA, Africa, "Uganda"),
    UKR(EMEA, Europe, "Ukraine"),
    URY(AMER, SouthAmerica, "Uruguay"),
    USA(AMER, NorthAmerica, "United States"),
    UZB(APAC, Asia, "Uzbekistan"),
    VAT(EMEA, Europe, "Vatican City"),
    VCT(AMER, NorthAmerica, "Saint Vincent"),
    VEN(AMER, SouthAmerica, "Venezuela"),
    VGB(AMER, NorthAmerica, "British Virgin Islands"),
    VIR(AMER, NorthAmerica, "US Virgin Islands"),
    VNM(APAC, Asia, "Vietnam"),
    VUT(APAC, Oceania, "Vanuatu"),
    WLF(APAC, Oceania, "Wallis and Futuna"),
    WLS(EMEA, Europe, "Wales"),
    WSM(APAC, Oceania, "Samoa"),
    YEM(EMEA, Asia, "Yemen"),
    ZAF(EMEA, Africa, "South Africa"),
    ZMB(EMEA, Africa, "Zambia"),
    ZWE(EMEA, Africa, "Zimbabwe");

    private final Region region;
    private final Continent continent;
    private final String name;

    Country(Region region, Continent continent, String name) {
        this.region = region;
        this.continent = continent;
        this.name = name;
    }

    /**
     * Gets the geographical region of the country.
     *
     * @return the {@link Region} enum.
     */
    public Region getRegion() {
        return region;
    }

    /**
     * Gets the geographical continent of the country.
     *
     * @return the {@link Continent} enum.
     */
    public Continent getContinent() {
        return continent;
    }

    /**
     * Gets the name of the country.
     *
     * @return the country name.
     */
    public String getName() {
        return name;
    }
}
